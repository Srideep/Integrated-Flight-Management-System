%% get_nav_logic_script_text.m
% Returns the complete text for the script inside the Navigation_Logic
% MATLAB Function block. Separating this logic makes the main creation
% scripts cleaner and the core logic easier to find and edit.

function script_text = get_nav_logic_script_text()
    script_text = [ ...
        'function NavBus = fcn(PosBus)\n' ...
        ' %#codegen\n' ...
        ' \n' ...
        ' % Initialize the output bus to a known, safe state\n' ...
        ' NavBus = initialize_navigation_bus();\n' ...
        ' \n' ...
        ' % Call Python bridge to get the active flight leg\n' ...
        ' try\n' ...
        '     leg_data = py.interfaces.matlab_python_bridge.get_current_leg_bridge();\n' ...
        ' catch\n' ...
        '     % If Python isn''t running, default to an empty set to prevent errors\n' ...
        '     leg_data = []; \n' ...
        ' end\n' ...
        ' \n' ...
        ' % Only perform calculations if a valid flight leg exists\n' ...
        ' if ~isempty(leg_data)\n' ...
        '     start_wp = leg_data.start_waypoint;\n' ...
        '     end_wp = leg_data.end_waypoint;\n' ...
        '     \n' ...
        '     % Call EXTERNAL .m files for calculations (enhances maintainability)\n' ...
        '     [dist_nm, bearing_deg] = calculate_distance_bearing(PosBus.latitude, PosBus.longitude, end_wp.latitude, end_wp.longitude);\n' ...
        '     xte_nm = calculate_cross_track_error(PosBus.latitude, PosBus.longitude, start_wp.latitude, start_wp.longitude, end_wp.latitude, end_wp.longitude);\n' ...
        '     \n' ...
        '     % Populate the output bus struct\n' ...
        '     NavBus.CrossTrackError_nm = xte_nm;\n' ...
        '     NavBus.DistanceToGo_nm = dist_nm;\n' ...
        '     NavBus.DesiredCourse_deg = bearing_deg;\n' ...
        ' end\n' ...
        'end\n' ...
        '\n' ...
        'function bus = initialize_navigation_bus()\n' ...
        '  % Creates a zero-filled struct matching the NavigationBus definition\n' ...
        '  % This prevents errors when no flight plan is active.\n' ...
        '  bus = struct;\n' ...
        '  bus.CrossTrackError_nm = 0;\n' ...
        '  bus.DistanceToGo_nm = 0;\n' ...
        '  bus.DesiredCourse_deg = 0;\n' ...
        'end' ...
    ];
end
